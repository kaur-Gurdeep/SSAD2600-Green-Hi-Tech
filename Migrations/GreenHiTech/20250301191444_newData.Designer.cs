// <auto-generated />
using System;
using GreenHiTech.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenHiTech.Migrations.GreenHiTech
{
    [DbContext(typeof(GreenHiTechContext))]
    [Migration("20250301191444_newData")]
    partial class newData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenHiTech.Models.AddressDetail", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("PkId")
                        .HasName("PK__AddressD__A7C03E18B775225D");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("GreenHiTech.Models.Cart", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<int>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FkUserID");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(9, 2)");

                    b.HasKey("PkId")
                        .HasName("PK__Cart__A7C03E1877B52D70");

                    b.HasIndex("FkUserId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.CartProduct", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<int>("FkCartId")
                        .HasColumnType("int")
                        .HasColumnName("FkCartID");

                    b.Property<int>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FkProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PkId")
                        .HasName("PK__CartProd__A7C03E188434383B");

                    b.HasIndex("FkCartId");

                    b.HasIndex("FkProductId");

                    b.ToTable("CartProduct", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.Category", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.HasKey("PkId")
                        .HasName("PK__Category__A7C03E183DBBDE88");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.Order", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<int>("FkUserId")
                        .HasColumnType("int")
                        .HasColumnName("FkUserID");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(9, 2)");

                    b.HasKey("PkId")
                        .HasName("PK__Order__A7C03E18DFEDDD55");

                    b.HasIndex("FkUserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.OrderDetail", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<int>("FkOrderId")
                        .HasColumnType("int")
                        .HasColumnName("FkOrderID");

                    b.Property<int>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FkProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PkId")
                        .HasName("PK__OrderDet__A7C03E1842399867");

                    b.HasIndex("FkOrderId");

                    b.HasIndex("FkProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GreenHiTech.Models.Payment", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<int>("FkOderId")
                        .HasColumnType("int")
                        .HasColumnName("FkOderID");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    b.HasKey("PkId")
                        .HasName("PK__Payment__A7C03E18DCD08483");

                    b.HasIndex("FkOderId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.Product", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FkCategoryID");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("PkId")
                        .HasName("PK__Product__A7C03E185AF044F3");

                    b.HasIndex("FkCategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.ProductImage", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int>("FkProductId")
                        .HasColumnType("int")
                        .HasColumnName("FkProductID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("ImageURL");

                    b.HasKey("PkId")
                        .HasName("PK__ProductI__A7C03E18C7186903");

                    b.HasIndex("FkProductId");

                    b.ToTable("ProductImage", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.User", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FkAddressId")
                        .HasColumnType("int")
                        .HasColumnName("FkAddressID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PkId")
                        .HasName("PK__User__A7C03E180177EC3E");

                    b.HasIndex("FkAddressId");

                    b.HasIndex(new[] { "Email" }, "EmailUniqueness")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GreenHiTech.Models.Cart", b =>
                {
                    b.HasOne("GreenHiTech.Models.User", "FkUser")
                        .WithMany("Carts")
                        .HasForeignKey("FkUserId")
                        .IsRequired()
                        .HasConstraintName("FKCart316510");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("GreenHiTech.Models.CartProduct", b =>
                {
                    b.HasOne("GreenHiTech.Models.Cart", "FkCart")
                        .WithMany("CartProducts")
                        .HasForeignKey("FkCartId")
                        .IsRequired()
                        .HasConstraintName("FKCartProduc150139");

                    b.HasOne("GreenHiTech.Models.Product", "FkProduct")
                        .WithMany("CartProducts")
                        .HasForeignKey("FkProductId")
                        .IsRequired()
                        .HasConstraintName("FKCartProduc893105");

                    b.Navigation("FkCart");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("GreenHiTech.Models.Order", b =>
                {
                    b.HasOne("GreenHiTech.Models.User", "FkUser")
                        .WithMany("Orders")
                        .HasForeignKey("FkUserId")
                        .IsRequired()
                        .HasConstraintName("FKOrder677398");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("GreenHiTech.Models.OrderDetail", b =>
                {
                    b.HasOne("GreenHiTech.Models.Order", "FkOrder")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FkOrderId")
                        .IsRequired()
                        .HasConstraintName("FKOrderDetai54985");

                    b.HasOne("GreenHiTech.Models.Product", "FkProduct")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FkProductId")
                        .IsRequired()
                        .HasConstraintName("FKOrderDetai737279");

                    b.Navigation("FkOrder");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("GreenHiTech.Models.Payment", b =>
                {
                    b.HasOne("GreenHiTech.Models.Order", "FkOder")
                        .WithMany("Payments")
                        .HasForeignKey("FkOderId")
                        .IsRequired()
                        .HasConstraintName("FKPayment376314");

                    b.Navigation("FkOder");
                });

            modelBuilder.Entity("GreenHiTech.Models.Product", b =>
                {
                    b.HasOne("GreenHiTech.Models.Category", "FkCategory")
                        .WithMany("Products")
                        .HasForeignKey("FkCategoryId")
                        .IsRequired()
                        .HasConstraintName("FKProduct442106");

                    b.Navigation("FkCategory");
                });

            modelBuilder.Entity("GreenHiTech.Models.ProductImage", b =>
                {
                    b.HasOne("GreenHiTech.Models.Product", "FkProduct")
                        .WithMany("ProductImages")
                        .HasForeignKey("FkProductId")
                        .IsRequired()
                        .HasConstraintName("FKProductIma467861");

                    b.Navigation("FkProduct");
                });

            modelBuilder.Entity("GreenHiTech.Models.User", b =>
                {
                    b.HasOne("GreenHiTech.Models.AddressDetail", "FkAddress")
                        .WithMany("Users")
                        .HasForeignKey("FkAddressId")
                        .HasConstraintName("FKUser458995");

                    b.Navigation("FkAddress");
                });

            modelBuilder.Entity("GreenHiTech.Models.AddressDetail", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GreenHiTech.Models.Cart", b =>
                {
                    b.Navigation("CartProducts");
                });

            modelBuilder.Entity("GreenHiTech.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenHiTech.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GreenHiTech.Models.Product", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("GreenHiTech.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
